version: '1.0'
image: hudevals/hud-browser@sha256:b621d2b50510f9ef1b4460de37da3772c385a46b2c16ba9af32271a6563bed43
build:
  generatedAt: '2025-08-27T11:21:08.892437Z'
  hudVersion: 0.4.12
  directory: browser
  version: 0.1.3
environment:
  initializeMs: 12620
  toolCount: 9
tools:
- name: setup
  description: "Call internal 'setup' functions. Available tools:\n\n\u2022 Name:\
    \ game_2048_board (Initialize new game with specified board size and target tile.\n\
    \nArgs:\n    board_size: Size of the game board (3-6)\n    target_tile: Target\
    \ tile value (64, 128, 256, 512, 1024, 2048, etc.)\n\nReturns:\n    SetupResult\
    \ with game initialization status)\n  Arguments: board_size (integer) (optional),\
    \ target_tile (integer) (optional)\n\n\u2022 Name: game_2048_navigate (Navigate\
    \ to 2048 game.\n\nArgs:\n    url: Optional custom URL to navigate to\n\nReturns:\n\
    \    SetupResult with navigation status)\n  Arguments: url (string | null) (optional)\n\
    \n\u2022 Name: game_2048_near_win (Set board close to winning (with tiles near\
    \ target).\n\nArgs:\n    target_tile: The target tile for the game\n\nReturns:\n\
    \    SetupResult with near-win board status)\n  Arguments: target_tile (integer)\
    \ (optional)\n\n\u2022 Name: game_2048_reset (Reset game to initial state.\n\n\
    Returns:\n    SetupResult with reset status)\n  Arguments: none\n\n\u2022 Name:\
    \ game_2048_set_board (Set specific board configuration for testing.\n\nArgs:\n\
    \    board: 2D list representing the board state\n    score: Initial score\n \
    \   moves: Initial move count\n\nReturns:\n    SetupResult with board configuration\
    \ status)\n  Arguments: board (array), score (integer) (optional), moves (integer)\
    \ (optional)\n\n\u2022 Name: game_2048_test_seed (Seed the board with a test configuration.\n\
    \nReturns:\n    SetupResult with test seed status)\n  Arguments: none\n\n\u2022\
    \ Name: todo_custom_seed (Seed database with custom todo items.\n\nArgs:\n   \
    \ items: List of todo items to create\n\nReturns:\n    Setup result with seeded\
    \ items info)\n  Arguments: items (array)\n\n\u2022 Name: todo_navigate (Navigate\
    \ to the Todo app.\n\nArgs:\n    url: Optional custom URL to navigate to\n\nReturns:\n\
    \    Setup result with navigation confirmation)\n  Arguments: url (string)\n\n\
    \u2022 Name: todo_reset (Reset database to empty state.\n\nReturns:\n    Setup\
    \ result with reset confirmation)\n  Arguments: none\n\n\u2022 Name: todo_seed\
    \ (Seed database with default test todos.\n\nArgs:\n    num_items: Number of test\
    \ items to create (default: 5)\n\nReturns:\n    Setup result with seeded items\
    \ info)\n  Arguments: num_items (integer) (optional)"
- name: evaluate
  description: "Call internal 'evaluate' functions. Available tools:\n\n\u2022 Name:\
    \ game_2048_efficiency (Evaluate game efficiency based on score/moves ratio.\n\
    \nMatches text-2048 implementation.\n\nArgs:\n    min_ratio: The minimum efficiency\
    \ ratio to achieve\n\nReturns:\n    EvaluationResult with linear reward based\
    \ on efficiency)\n  Arguments: min_ratio (number)\n\n\u2022 Name: game_2048_game_over\
    \ (Check if game is over (no valid moves).\n\nReturns:\n    EvaluationResult)\n\
    \  Arguments: none\n\n\u2022 Name: game_2048_game_won (Check if game is won (reached\
    \ target tile).\n\nReturns:\n    EvaluationResult)\n  Arguments: none\n\n\u2022\
    \ Name: game_2048_max_number (Check if player reached target tile value.\n\nUses\
    \ logarithmic reward scaling to match text-2048 implementation.\n\nArgs:\n   \
    \ target: The target tile value to reach\n\nReturns:\n    EvaluationResult with\
    \ logarithmic reward)\n  Arguments: target (integer)\n\n\u2022 Name: game_2048_moves_made\
    \ (Check if minimum number of moves were made.\n\nArgs:\n    min_moves: The minimum\
    \ number of moves to make\n\nReturns:\n    EvaluationResult)\n  Arguments: min_moves\
    \ (integer)\n\n\u2022 Name: game_2048_score_reached (Check if player reached target\
    \ score.\n\nArgs:\n    target_score: The target score to reach\n\nReturns:\n \
    \   EvaluationResult)\n  Arguments: target_score (integer)\n\n\u2022 Name: todo_all_completed\
    \ (Check if all todos are completed.\n\nReturns:\n    Evaluation result)\n  Arguments:\
    \ none\n\n\u2022 Name: todo_completed (Check if expected number of todos are completed.\n\
    \nArgs:\n    expected_count: The expected number of completed todos\n\nReturns:\n\
    \    Evaluation result)\n  Arguments: expected_count (integer)\n\n\u2022 Name:\
    \ todo_completion_rate (Check if completion rate meets target.\n\nArgs:\n    target_rate:\
    \ The target completion rate (default 0.5)\n\nReturns:\n    Evaluation result)\n\
    \  Arguments: target_rate (number) (optional)\n\n\u2022 Name: todo_exists (Check\
    \ if a todo with specific title exists.\n\nArgs:\n    title: The title of the\
    \ todo to check\n\nReturns:\n    Evaluation result)\n  Arguments: title (string)\n\
    \n\u2022 Name: todo_total_count (Check if total todo count meets minimum.\n\n\
    Args:\n    min_count: The minimum number of todos expected (default 1)\n\nReturns:\n\
    \    Evaluation result)\n  Arguments: min_count (integer) (optional)"
- name: launch_app
  description: "Launch a specific application dynamically and navigate to it.\n\n\
    Args:\n    app_name: Name of the app to launch (e.g., 'todo', '2048')\n\nReturns:\n\
    \    Success message with app URL"
- name: api_request
  description: "Make HTTP API requests.\n\nArgs:\n    url: The URL to request\n  \
    \  method: HTTP method (GET, POST, etc.)\n    data: Optional JSON data for POST/PUT\
    \ requests\n\nReturns:\n    Response data as dict"
- name: query_database
  description: "Execute a database query (mock implementation).\n\nArgs:\n    query:\
    \ SQL query to execute\n\nReturns:\n    Query results as list of dicts"
- name: computer
  description: Control computer with mouse, keyboard, and screenshots
- name: anthropic_computer
  description: Control computer with mouse, keyboard, and screenshot
- name: openai_computer
  description: Control computer with mouse, keyboard, and screenshots
- name: playwright
  description: Web automation tool using Playwright
push:
  source: hud-browser:dev@sha256:b621d2b50510f9ef1b4460de37da3772c385a46b2c16ba9af32271a6563bed43
  pushedAt: '2025-08-27T11:31:07.301427Z'
  registry: hudevals
