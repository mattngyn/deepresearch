version: '1.0'
image: hudevals/hud-remote-browser@sha256:5cb5f6b2ef6aca30101581359c80dead290bce671a87529c9cba4587ea99d6e3
build:
  generatedAt: '2025-09-08T02:57:48.304704Z'
  hudVersion: 0.4.19
  directory: remote_browser
  version: 0.1.1
environment:
  initializeMs: 9484
  toolCount: 6
  variables:
    _note: You can edit this section to add or modify environment variables. Provided
      variables will be used when running the environment.
    provided:
      ANCHOR_API_KEY: sk-9b85fdbd2b497bf4def463cc3b69b44b
      BROWSER_PROVIDER: anchorbrowser
tools:
- name: setup
  description: "Call internal 'setup' functions. Available tools:\n\n\u2022 Name:\
    \ clear_cookies (Clear all cookies from the browser.\n\nReturns:\n    Setup result\
    \ with status)\n  Arguments: none\n\n\u2022 Name: click_element (Click on an element\
    \ by selector.\n\nArgs:\n    selector: CSS selector for the element\n    timeout:\
    \ Maximum time to wait for element (ms)\n\nReturns:\n    Setup result with status)\n\
    \  Arguments: selector (string), timeout (integer) (optional)\n\n\u2022 Name:\
    \ fill_input (Fill an input field with text.\n\nArgs:\n    selector: CSS selector\
    \ for the input element\n    text: Text to fill in the input\n    timeout: Maximum\
    \ time to wait for element (ms)\n\nReturns:\n    Setup result with status)\n \
    \ Arguments: selector (string), text (string), timeout (integer) (optional)\n\n\
    \u2022 Name: load_html_content (Load custom HTML content directly into the browser.\n\
    \nArgs:\n    html: HTML content to load\n\nReturns:\n    Setup result with status)\n\
    \  Arguments: html (string)\n\n\u2022 Name: navigate_to_url (Navigate browser\
    \ to a specific URL.\n\nArgs:\n    url: The URL to navigate to\n    wait_for_load_state:\
    \ State to wait for after navigation\n\nReturns:\n    Setup result with navigation\
    \ status)\n  Arguments: url (string), wait_for_load_state (string) (optional)\n\
    \n\u2022 Name: select_option (Select an option in a dropdown.\n\nArgs:\n    selector:\
    \ CSS selector for the select element\n    value: Value of the option to select\n\
    \    timeout: Maximum time to wait for element (ms)\n\nReturns:\n    Setup result\
    \ with status)\n  Arguments: selector (string), value (string), timeout (integer)\
    \ (optional)\n\n\u2022 Name: set_cookies (Set cookies in the browser.\n\nArgs:\n\
    \    cookies: List of cookie dictionaries with name, value, and optional properties\n\
    \nReturns:\n    Setup result with status)\n  Arguments: cookies (array)\n\n\u2022\
    \ Name: sheets_from_bytes (Create a Google Sheet from base64 encoded Excel bytes.\n\
    \nArgs:\n    base64_bytes: Base64 encoded Excel file bytes\n    sheet_name: Name\
    \ for the new Google Sheet (default: \"Worksheet\")\n\nReturns:\n    Status dictionary\
    \ with sheet information)\n  Arguments: base64_bytes (string | null) (optional),\
    \ sheet_name (string) (optional)\n\n\u2022 Name: sheets_from_xlsx (Create a Google\
    \ Sheet from an Excel file URL.\n\nArgs:\n    file_url: URL of the Excel file\
    \ to convert\n    sheet_name: Name for the new Google Sheet (default: \"Worksheet\"\
    )\n\nReturns:\n    Status dictionary with sheet information)\n  Arguments: file_url\
    \ (string | null) (optional), sheet_name (string) (optional)"
  inputSchema:
    type: object
    properties:
      name:
        type: string
        description: 'Name of the internal tool to call. Must be one of: clear_cookies,
          click_element, fill_input, load_html_content, navigate_to_url, select_option,
          set_cookies, sheets_from_bytes, sheets_from_xlsx'
        enum:
        - clear_cookies
        - click_element
        - fill_input
        - load_html_content
        - navigate_to_url
        - select_option
        - set_cookies
        - sheets_from_bytes
        - sheets_from_xlsx
      arguments:
        anyOf:
        - type: object
          description: Arguments object to pass to the internal tool
        - type: string
          description: JSON string of arguments to pass to the internal tool
        description: Arguments to pass to the internal tool. Can be an object or JSON
          string. See description for details on each tool's parameters.
    required:
    - name
    - arguments
    examples:
    - name: clear_cookies
      arguments: {}
    - name: click_element
      arguments:
        selector: <selector>
        timeout: 0
    - name: fill_input
      arguments:
        selector: <selector>
        text: <text>
        timeout: 0
- name: evaluate
  description: "Call internal 'evaluate' functions. Available tools:\n\n\u2022 Name:\
    \ cookie_exists (Check if a cookie exists in the browser.\n\nArgs:\n    cookie_name:\
    \ Name of the cookie to check for\n\nReturns:\n    Evaluation result)\n  Arguments:\
    \ cookie_name (string)\n\n\u2022 Name: cookie_match (Check if a cookie value matches\
    \ expected value.\n\nArgs:\n    cookie_name: Name of the cookie to check\n   \
    \ expected_value: Expected value of the cookie\n\nReturns:\n    Evaluation result)\n\
    \  Arguments: cookie_name (string), expected_value (string)\n\n\u2022 Name: element_exists\
    \ (Check if an element exists on the page.\n\nArgs:\n    selector: CSS selector\
    \ for the element\n\nReturns:\n    Evaluation result)\n  Arguments: selector (string)\n\
    \n\u2022 Name: history_length (Check if action history has specific length.\n\n\
    Args:\n    min_length: Minimum required length\n    max_length: Maximum allowed\
    \ length\n\nReturns:\n    Evaluation result)\n  Arguments: min_length (integer\
    \ | null) (optional), max_length (integer | null) (optional)\n\n\u2022 Name: page_contains\
    \ (Check if the page contains specific text.\n\nArgs:\n    search_terms: Text\
    \ to search for (string or list of strings)\n    partial_rewarding: If True, give\
    \ partial credit for finding some terms\n\nReturns:\n    Evaluation result with\
    \ reward between 0.0 and 1.0)\n  Arguments: search_terms (string | array), partial_rewarding\
    \ (boolean) (optional)\n\n\u2022 Name: raw_last_action_is (Check if the last action\
    \ matches expected.\n\nArgs:\n    expected_action: Expected action type (e.g.,\
    \ \"click\", \"type\", \"navigate\")\n    expected_details: Optional expected\
    \ details of the action\n\nReturns:\n    Standard evaluation result with reward\
    \ between 0.0 and 1.0)\n  Arguments: expected_action (string), expected_details\
    \ (object | null) (optional)\n\n\u2022 Name: selector_history (Check if selector\
    \ at index matches expected.\n\nArgs:\n    index: Index in selector history (0-based)\n\
    \    expected_selector: Expected selector string\n\nReturns:\n    Standard evaluation\
    \ result with reward between 0.0 and 1.0)\n  Arguments: index (integer), expected_selector\
    \ (string)\n\n\u2022 Name: sheet_contains (Check if a Google Sheet contains specific\
    \ text by copying content to clipboard.\n\nArgs:\n    args: Search terms as string\
    \ or list of strings\n    partial_rewarding: Whether to give partial rewards\n\
    \nReturns:\n    Evaluation result)\n  Arguments: args (string | array), partial_rewarding\
    \ (boolean) (optional)\n\n\u2022 Name: sheets_cell_values (Check if specific cells\
    \ in a Google Sheet have expected values.\n\nArgs:\n    args: Either a dict of\
    \ cell mappings {\"A1\": \"value\", \"B2\": \"value\"}\n          or a list with\
    \ a dict [{\"A1\": \"value\", \"B2\": \"value\"}]\n    partial_rewarding: Whether\
    \ to give partial rewards\n\nReturns:\n    Evaluation result dict with reward,\
    \ done, and info)\n  Arguments: args (object | array), partial_rewarding (boolean)\
    \ (optional)\n\n\u2022 Name: url_match (Check if the current URL contains a target\
    \ string.\n\nArgs:\n    target_url: The target URL string to look for\n\nReturns:\n\
    \    Evaluation result with reward between 0.0 and 1.0)\n  Arguments: target_url\
    \ (string)\n\n\u2022 Name: verify_type_action (Check for a sequence: first click\
    \ on element, then type text into it.\n\nArgs:\n    expected_text: The expected\
    \ text that should have been typed\n    selector: Optional selector to check (if\
    \ not provided, checks last type action)\n    partial_rewarding: Whether to give\
    \ partial rewards\n\nReturns:\n    Standard evaluation result with reward between\
    \ 0.0 and 1.0)\n  Arguments: expected_text (string), selector (string | null)\
    \ (optional), partial_rewarding (boolean) (optional)"
  inputSchema:
    type: object
    properties:
      name:
        type: string
        description: 'Name of the internal tool to call. Must be one of: cookie_exists,
          cookie_match, element_exists, history_length, page_contains, raw_last_action_is,
          selector_history, sheet_contains, sheets_cell_values, url_match, verify_type_action'
        enum:
        - cookie_exists
        - cookie_match
        - element_exists
        - history_length
        - page_contains
        - raw_last_action_is
        - selector_history
        - sheet_contains
        - sheets_cell_values
        - url_match
        - verify_type_action
      arguments:
        anyOf:
        - type: object
          description: Arguments object to pass to the internal tool
        - type: string
          description: JSON string of arguments to pass to the internal tool
        description: Arguments to pass to the internal tool. Can be an object or JSON
          string. See description for details on each tool's parameters.
    required:
    - name
    - arguments
    examples:
    - name: cookie_exists
      arguments:
        cookie_name: <cookie_name>
    - name: cookie_match
      arguments:
        cookie_name: <cookie_name>
        expected_value: <expected_value>
    - name: element_exists
      arguments:
        selector: <selector>
- name: playwright
  description: Web automation tool using Playwright
  inputSchema:
    properties:
      action:
        description: The action to perform (navigate, screenshot, click, type, get_page_info,
          wait_for_element)
        title: Action
        type: string
      url:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: URL to navigate to (for navigate action)
        title: Url
      selector:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: CSS selector for element (for click, type, wait_for_element actions)
        title: Selector
      text:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Text to type (for type action)
        title: Text
      wait_for_load_state:
        anyOf:
        - enum:
          - commit
          - domcontentloaded
          - load
          - networkidle
          type: string
        - type: 'null'
        default: null
        description: 'State to wait for: commit, domcontentloaded, load, networkidle
          (default: networkidle)'
        title: Wait For Load State
    required:
    - action
    type: object
- name: computer
  description: Control computer with mouse, keyboard, and screenshots
  inputSchema:
    properties:
      action:
        description: The action name (click, type, move, etc.)
        title: Action
        type: string
      x:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: X coordinate for click/move/scroll actions
        title: X
      y:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Y coordinate for click/move/scroll actions
        title: Y
      button:
        anyOf:
        - enum:
          - left
          - right
          - middle
          - back
          - forward
          type: string
        - type: 'null'
        default: null
        description: Mouse button for click actions
        title: Button
      pattern:
        anyOf:
        - items:
            type: integer
          type: array
        - type: 'null'
        default: null
        description: Click pattern for multi-clicks (e.g., [100] for double-click)
        title: Pattern
      text:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Text for type/response actions
        title: Text
      keys:
        anyOf:
        - items:
            type: string
          type: array
        - type: 'null'
        default: null
        description: Keys for press/keydown/keyup actions
        title: Keys
      enter_after:
        anyOf:
        - type: boolean
        - type: 'null'
        default: null
        description: Whether to press Enter after typing
        title: Enter After
      scroll_x:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Horizontal scroll amount (positive = right)
        title: Scroll X
      scroll_y:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Vertical scroll amount (positive = down)
        title: Scroll Y
      offset_x:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: X offset for relative move
        title: Offset X
      offset_y:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Y offset for relative move
        title: Offset Y
      path:
        anyOf:
        - items:
            maxItems: 2
            minItems: 2
            prefixItems:
            - type: integer
            - type: integer
            type: array
          type: array
        - type: 'null'
        default: null
        description: Path for drag actions as list of (x, y) coordinates
        title: Path
      time:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Time in milliseconds for wait action
        title: Time
      hold_keys:
        anyOf:
        - items:
            type: string
          type: array
        - type: 'null'
        default: null
        description: Keys to hold during action
        title: Hold Keys
      duration:
        anyOf:
        - type: number
        - type: 'null'
        default: null
        description: Duration in seconds for hold_key action
        title: Duration
    required:
    - action
    type: object
- name: anthropic_computer
  description: Control computer with mouse, keyboard, and screenshot
  inputSchema:
    properties:
      action:
        description: The action to perform on the computer
        title: Action
        type: string
      coordinate:
        anyOf:
        - items:
            type: integer
          type: array
        - maxItems: 2
          minItems: 2
          prefixItems:
          - type: integer
          - type: integer
          type: array
        - type: 'null'
        default: null
        description: The coordinate to interact with on the computer [x, y]
        title: Coordinate
      text:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: The text to type on the computer or key to press
        title: Text
      start_coordinate:
        anyOf:
        - items:
            type: integer
          type: array
        - maxItems: 2
          minItems: 2
          prefixItems:
          - type: integer
          - type: integer
          type: array
        - type: 'null'
        default: null
        description: The starting coordinate for drag actions [x, y]
        title: Start Coordinate
      scroll_direction:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: The direction to scroll (up, down, left, right)
        title: Scroll Direction
      scroll_amount:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: The amount to scroll
        title: Scroll Amount
      duration:
        anyOf:
        - type: number
        - type: 'null'
        default: null
        description: The duration of the action in seconds
        title: Duration
      take_screenshot_on_click:
        default: true
        description: Whether to take a screenshot after clicking
        title: Take Screenshot On Click
        type: boolean
    required:
    - action
    type: object
- name: openai_computer
  description: Control computer with mouse, keyboard, and screenshots
  inputSchema:
    properties:
      type:
        description: The action type to perform
        title: Type
        type: string
      x:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: X coordinate for click/move/scroll actions
        title: X
      y:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Y coordinate for click/move/scroll actions
        title: Y
      button:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Mouse button for click actions (left, right, middle, wheel)
        title: Button
      text:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Text to type or response text
        title: Text
      scroll_x:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Horizontal scroll amount
        title: Scroll X
      scroll_y:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Vertical scroll amount
        title: Scroll Y
      ms:
        anyOf:
        - type: integer
        - type: 'null'
        default: null
        description: Time to wait in milliseconds
        title: Ms
      keys:
        anyOf:
        - items:
            type: string
          type: array
        - type: 'null'
        default: null
        description: Keys to press
        title: Keys
      path:
        anyOf:
        - items:
            additionalProperties:
              type: integer
            type: object
          type: array
        - type: 'null'
        default: null
        description: Path for drag actions as list of {x, y} dicts
        title: Path
      action:
        anyOf:
        - type: string
        - type: 'null'
        default: null
        description: Custom action name
        title: Action
    required:
    - type
    type: object
push:
  source: hud-remote-browser:dev@sha256:5cb5f6b2ef6aca30101581359c80dead290bce671a87529c9cba4587ea99d6e3
  pushedAt: '2025-09-08T02:59:29.900437Z'
  registry: hudevals
